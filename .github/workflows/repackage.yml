name: Repackage Bundles

on:
  workflow_call:
    outputs:
      uploaded-bundles:
        description: Number of bundles uploaded to GCP.
        value: ${{ jobs.repackage.outputs.uploaded-bundles }}

jobs:
  repackage:
    runs-on: ubuntu-latest
    env:
      MANIFEST_FILE: ./kernel-package-lists/manifest.yml
      BUILD_DATA_DIR: .build-data
    outputs:
      uploaded-bundles: ${{ steps.uploaded-bundles.outputs.uploaded-bundles }}

    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_KERNEL_CACHE }}'

      - uses: google-github-actions/setup-gcloud@v1

      - uses: ./.github/actions/env

      - name: Prepare Cache
        run: |
          mkdir -p "${BUILD_DATA_DIR}/cache"
          IFS=',' read -r -a bucket_names <<< "${KERNEL_BUNDLE_BUCKET}"
          for bucket in "${bucket_names[@]}"; do
            if [ ! -f "${BUILD_DATA_DIR}/cache/cache.yml" ]; then
              gsutil cp "${bucket}/cache.yml" "${BUILD_DATA_DIR}/cache/cache.yml" || true
            fi
          done
          touch "${BUILD_DATA_DIR}/cache/cache.yml"

      - name: Restore manifest
        uses: actions/download-artifact@v3
        with:
          # this is archived by the crawl workflow
          # see .github/workflows/crawl.yml for details
          name: kernel-crawler-manifest
          path: kernel-package-lists

      - name: List packages
        run: make list-files

      - name: Build packers
        run: make packers

      - name: Repackage
        run: |
          mkdir -p "${BUILD_DATA_DIR}/packages"

          ./scripts/download-packages "${BUILD_DATA_DIR}" "${KERNEL_PACKAGE_BUCKET}"

          make repackage

          ./scripts/upload-bundles "${BUILD_DATA_DIR}" "$KERNEL_BUNDLE_BUCKET"

      - name: Check BTF support
        run: |
          tempdir="$(mktemp -d)"
          IFS=',' read -r -a bucket <<< "${KERNEL_BUNDLE_BUCKET}"
          gsutil cp "${bucket[0]}/kernel-features.json" "$tempdir/" || echo '{}' > "$tempdir/kernel-features.json"

          ./scripts/kernel-features.py --tee --output "$tempdir/kernel-features.json" "${BUILD_DATA_DIR}/bundles"

          gsutil cp "$tempdir/kernel-features.json" "${bucket[0]}/kernel-features.json"

      - name: Cleanup
        run: |
          # clean up repackaged bundles and packages
          rm -rf "${BUILD_DATA_DIR}/packages/*"
          rm -rf "${BUILD_DATA_DIR}/bundles/*"

      - name: Uploaded bundles
        id: uploaded-bundles
        run: |
          IFS=',' read -r -a bucket_names <<< "$KERNEL_BUNDLE_BUCKET"
          echo "uploaded-bundles=$(gsutil ls "${bucket_names[0]}" | wc -l | xargs)" >> "${GITHUB_OUTPUT}"

      - name: Cache
        run: make combine-cache clean-cache

      - name: Upload cache
        run: |
          IFS=',' read -r -a bucket_names <<< "${KERNEL_BUNDLE_BUCKET}"
          gsutil cp .build-data/cache/cache.yml "${bucket_names[0]}/cache.yml"

      - name: Commit to Collector Repo
        if: github.event_name != 'pull_request'
        run: make robo-collector-commit
        env:
          RHACS_BOT_GITHUB_TOKEN: ${{ secrets.RHACS_BOT_GITHUB_TOKEN }}
          RHACS_BOT_GITHUB_EMAIL: ${{ vars.RHACS_BOT_GITHUB_EMAIL }}
          RHACS_BOT_GITHUB_USERNAME: ${{ vars.RHACS_BOT_GITHUB_USERNAME }}

  notify:
    runs-on: ubuntu-latest
    needs:
      - repackage
    if: always() && contains(join(needs.*.result, ','), 'failure') && github.event_name == 'schedule'
    steps:
      - name: Notify Oncall
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_COLLECTOR_ONCALL_WEBHOOK }}
          SLACK_CHANNEL: team-acs-collector-oncall
          SLACK_COLOR: failure
          SLACK_LINK_NAMES: true
          SLACK_TITLE: Kernel Repackaging Failed
          MSG_MINIMAL: actions url,commit
          SLACK_MESSAGE: |
            @acs-collector-oncall
